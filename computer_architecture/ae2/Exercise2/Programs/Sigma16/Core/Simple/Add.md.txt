0,6,1,6
2,7,3,7
4,8,5,9
6,9,7,10
8,16,9,17
10,18
source
Line Addr Code Code Source
<span class='ListingHeader'>Line Addr Code Code Source</span>
<span class='ListingHeader'>Line Addr Code Code Source</span>
   1 0000           ; Add: a minimal program that adds two integer variables
   1 0000           ; Add: a minimal program that adds two integer variables
   1 0000           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'>; Add: a minimal program that adds two integer variables</span>
   2 0000           ; Sigma16: https://jtod.github.io/home/Sigma16/  John O'Donnell, 2022
   2 0000           ; Sigma16: https://jtod.github.io/home/Sigma16/  John O'Donnell, 2022
   2 0000           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'>; Sigma16: https://jtod.github.io/home/Sigma16/  John O'Donnell, 2022</span>
   3 0000           
   3 0000           
   3 0000           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'></span>
   4 0000           ; Execution starts at location 0, where the first instruction will be
   4 0000           ; Execution starts at location 0, where the first instruction will be
   4 0000           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'>; Execution starts at location 0, where the first instruction will be</span>
   5 0000           ; placed when the program is executed.
   5 0000           ; placed when the program is executed.
   5 0000           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'>; placed when the program is executed.</span>
   6 0000           
   6 0000           
   6 0000           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'></span>
   7 0000 f101 0008       load   R1,x[R0]   ; R1 := x
   7 0000 f101 0008       load   R1,x[R0]   ; R1 := x
   7 0000 f101 0008 <span class='FIELDLABEL'></span>      <span class='FIELDOPERATION'>load</span>   <span class='FIELDOPERAND'>R1,x[R0]</span><span class='FIELDCOMMENT'>   ; R1 := x</span>
   8 0002 f201 0009       load   R2,y[R0]   ; R2 := y
   8 0002 f201 0009       load   R2,y[R0]   ; R2 := y
   8 0002 f201 0009 <span class='FIELDLABEL'></span>      <span class='FIELDOPERATION'>load</span>   <span class='FIELDOPERAND'>R2,y[R0]</span><span class='FIELDCOMMENT'>   ; R2 := y</span>
   9 0004 0312            add    R3,R1,R2   ; R3 := x + y
   9 0004 0312            add    R3,R1,R2   ; R3 := x + y
   9 0004 0312      <span class='FIELDLABEL'></span>      <span class='FIELDOPERATION'>add</span>    <span class='FIELDOPERAND'>R3,R1,R2</span><span class='FIELDCOMMENT'>   ; R3 := x + y</span>
  10 0005 f302 000a       store  R3,z[R0]   ; z := x + y
  10 0005 f302 000a       store  R3,z[R0]   ; z := x + y
  10 0005 f302 000a <span class='FIELDLABEL'></span>      <span class='FIELDOPERATION'>store</span>  <span class='FIELDOPERAND'>R3,z[R0]</span><span class='FIELDCOMMENT'>   ; z := x + y</span>
  11 0007 c000            trap   R0,R0,R0   ; terminate
  11 0007 c000            trap   R0,R0,R0   ; terminate
  11 0007 c000      <span class='FIELDLABEL'></span>      <span class='FIELDOPERATION'>trap</span>   <span class='FIELDOPERAND'>R0,R0,R0</span><span class='FIELDCOMMENT'>   ; terminate</span>
  12 0008           
  12 0008           
  12 0008           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'></span>
  13 0008           ; Expected result: z = x + y = 23 + 14 = 37 (hex 0025)
  13 0008           ; Expected result: z = x + y = 23 + 14 = 37 (hex 0025)
  13 0008           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'>; Expected result: z = x + y = 23 + 14 = 37 (hex 0025)</span>
  14 0008           
  14 0008           
  14 0008           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'></span>
  15 0008           ; Static variables are placed in memory after the program
  15 0008           ; Static variables are placed in memory after the program
  15 0008           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'>; Static variables are placed in memory after the program</span>
  16 0008           
  16 0008           
  16 0008           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'></span>
  17 0008 0017      x     data  23
  17 0008 0017      x     data  23
  17 0008 0017      <span class='FIELDLABEL'>x</span>     <span class='FIELDOPERATION'>data</span>  <span class='FIELDOPERAND'>23</span><span class='FIELDCOMMENT'></span>
  18 0009 000e      y     data  14
  18 0009 000e      y     data  14
  18 0009 000e      <span class='FIELDLABEL'>y</span>     <span class='FIELDOPERATION'>data</span>  <span class='FIELDOPERAND'>14</span><span class='FIELDCOMMENT'></span>
  19 000a 0000      z     data   0
  19 000a 0000      z     data   0
  19 000a 0000      <span class='FIELDLABEL'>z</span>     <span class='FIELDOPERATION'>data</span>   <span class='FIELDOPERAND'>0</span><span class='FIELDCOMMENT'></span>
  20 000b           
  20 000b           
  20 000b           <span class='FIELDLABEL'></span><span class='FIELDOPERATION'></span><span class='FIELDOPERAND'></span><span class='FIELDCOMMENT'></span>



Symbol table
<span class='ListingHeader'>Symbol table</span>
<span class='ListingHeader'>Symbol table</span>
Name        Val Org Mov  Def Used
<span class='ListingHeader'>Name        Val Org Mov  Def Used</span>
<span class='ListingHeader'>Name        Val Org Mov  Def Used</span>
x          0008 Loc Rel   17  7
x          0008 Loc Rel   17  7
x          0008 Loc Rel   17  7
y          0009 Loc Rel   18  8
y          0009 Loc Rel   18  8
y          0009 Loc Rel   18  8
z          000a Loc Rel   19  10
z          000a Loc Rel   19  10
z          000a Loc Rel   19  10